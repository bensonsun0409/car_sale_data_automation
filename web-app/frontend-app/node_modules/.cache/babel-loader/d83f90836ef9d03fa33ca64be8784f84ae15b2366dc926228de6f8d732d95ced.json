{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janet\\\\OneDrive\\\\\\u6587\\u4EF6\\\\\\u63A5\\u6848\\\\car_sale_data_automation\\\\web-app\\\\frontend-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableComponent = ({\n  data\n}) => {\n  _s();\n  const [tableData, setTableData] = useState({});\n  const [images, setImages] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // 監聽 tableData 的變化\n  useEffect(() => {\n    console.log('tableData 已更新:', tableData);\n  }, [tableData]);\n  const handleDataFetch = async () => {\n    setLoading(true);\n    try {\n      console.log('Received tabledatas:', data[\"tabledatas\"]);\n      if (data[\"success\"]) {\n        const filteredImages = {};\n        for (const [key, value] of Object.entries(data[\"images\"])) {\n          if (value) {\n            filteredImages[key] = value;\n          }\n        }\n        setImages(filteredImages);\n        const newTableData = typeof data[\"tabledatas\"] === 'object' && data[\"tabledatas\"] !== null ? data[\"tabledatas\"] : {};\n        setTableData(newTableData);\n        console.log('新設置的 tableData:', newTableData);\n      } else {\n        setImages({});\n        setTableData({});\n        setError(data[\"message\"] || \"發生錯誤。\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setImages({});\n      setTableData({});\n      setError(error.message || \"發生錯誤。\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 當 data 改變時調用 handleDataFetch\n  useEffect(() => {\n    handleDataFetch();\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u8F09\\u5165\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: tableData.headers && tableData.headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.rows && tableData.rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(TableComponent, \"er6k3jECYuZS3qX2tttyaEVOdwY=\");\n_c = TableComponent;\nexport default TableComponent;\nvar _c;\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TableComponent","data","_s","tableData","setTableData","images","setImages","error","setError","loading","setLoading","console","log","handleDataFetch","filteredImages","key","value","Object","entries","newTableData","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","headers","map","header","index","rows","row","rowIndex","cell","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/janet/OneDrive/文件/接案/car_sale_data_automation/web-app/frontend-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TableComponent = ({ data }) => {\n  const [tableData, setTableData] = useState({});\n  const [images, setImages] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // 監聽 tableData 的變化\n  useEffect(() => {\n    console.log('tableData 已更新:', tableData);\n  }, [tableData]);\n\n  const handleDataFetch = async () => {\n    setLoading(true);\n    try {\n      console.log('Received tabledatas:', data[\"tabledatas\"]);\n      if (data[\"success\"]) {\n        const filteredImages = {};\n        for (const [key, value] of Object.entries(data[\"images\"])) {\n          if (value) {\n            filteredImages[key] = value;\n          }\n        }\n        setImages(filteredImages);\n\n        const newTableData = typeof data[\"tabledatas\"] === 'object' && data[\"tabledatas\"] !== null ? data[\"tabledatas\"] : {};\n        setTableData(newTableData);\n        console.log('新設置的 tableData:', newTableData);\n      } else {\n        setImages({});\n        setTableData({});\n        setError(data[\"message\"] || \"發生錯誤。\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setImages({});\n      setTableData({});\n      setError(error.message || \"發生錯誤。\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 當 data 改變時調用 handleDataFetch\n  useEffect(() => {\n    handleDataFetch();\n  }, [data]);\n\n  return (\n    <div>\n      {loading && <p>載入中...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {/* 根據 tableData 渲染表格 */}\n      <table>\n        <thead>\n          <tr>\n            {/* 根據 tableData 的結構動態生成表頭 */}\n            {tableData.headers && tableData.headers.map((header, index) => (\n              <th key={index}>{header}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {/* 根據 tableData 的結構動態生成表格內容 */}\n          {tableData.rows && tableData.rows.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, cellIndex) => (\n                <td key={cellIndex}>{cell}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      {/* 其他組件內容 */}\n    </div>\n  );\n};\n\nexport default TableComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}